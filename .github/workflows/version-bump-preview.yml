name: Version Bump Preview

on:
  pull_request:
    branches:
      - 'main'
    types: [opened, synchronize, reopened]

# Add explicit permissions
permissions:
  contents: read
  pull-requests: write  # Required for commenting on pull requests

jobs:
  preview-version-bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --ignore-scripts
      
      - name: Determine version bump type
        id: version-type
        run: |
          # Default to patch
          TYPE="patch"
          
          # Get the PR branch and base branch
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
          
          # Debug info
          echo "BASE_SHA: $BASE_SHA"
          echo "HEAD_SHA: $HEAD_SHA"
          
          # Using set +e to prevent script from exiting if git log fails or grep finds no matches
          set +e
          
          # Find commit messages for this PR
          echo "Fetching commit messages..."
          COMMITS=$(git log $BASE_SHA..$HEAD_SHA --pretty=format:"%s" || echo "")
          
          # Log commit messages for debugging
          echo "Found $(echo "$COMMITS" | wc -l | xargs) commit messages"
          
          # Check for feature and breaking changes
          # Using grep || true to prevent non-zero exit when no matches are found
          if echo "$COMMITS" | grep -q "^feat\|^feat(" || true; then
            echo "Found feature commit - setting type to minor"
            TYPE="minor"
          fi
          
          if echo "$COMMITS" | grep -q "^BREAKING CHANGE\|^feat!" || true; then
            echo "Found breaking change - setting type to major"
            TYPE="major"
          fi
          
          echo "bump-type=$TYPE" >> $GITHUB_OUTPUT
          echo "Final version bump type: $TYPE"
      
      - name: Set version bump message
        id: version-msg
        run: |
          # Get base and head commits for PR
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
          
          # Get commit count for context
          COMMIT_COUNT=$(git rev-list --count $BASE_SHA..$HEAD_SHA || echo "0")
          
          # Create a simple message for the comment
          MESSAGE="### Version Change: ${{ steps.version-type.outputs.bump-type }}\n\nThis PR contains $COMMIT_COUNT commits and will trigger a **${{ steps.version-type.outputs.bump-type }}** version bump when merged."
          
          # Set the message as an output
          echo "message<<EOF" >> $GITHUB_OUTPUT
          echo "$MESSAGE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          # Show the message in the log
          echo "Version bump message:"
          echo "$MESSAGE"
      
      - name: Comment on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: version-bump-preview
          message: ${{ steps.version-msg.outputs.message }}
          recreate: true # Force update existing comment
          GITHUB_TOKEN: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}