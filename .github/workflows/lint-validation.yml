name: Validate No Linting Errors

on:
  # Only run via workflow_call to ensure commit validation runs first
  workflow_call:
    outputs:
      lint-success:
        description: "Indicates if linting passed"
        value: ${{ jobs.lint.outputs.lint-success }}
      build-cache-key:
        description: "The build cache key to use in subsequent jobs"
        value: ${{ jobs.lint.outputs.build-cache-key }}
  
  # Also allow manual triggering for debugging
  workflow_dispatch:

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    outputs:
      lint-success: ${{ steps.lint-validation.outputs.success }}
      build-cache-key: ${{ steps.build-cache.outputs.cache-key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --ignore-scripts
        
      # Cache the node_modules and build output
      - name: Cache node_modules and build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            lib
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-build-
            
      - name: Build project
        run: npm run build
        
      # Save cache info for later jobs
      - name: Set build cache outputs
        id: build-cache
        run: echo "cache-key=${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}" >> $GITHUB_OUTPUT
      
      - name: Run linting
        id: lint-validation
        continue-on-error: true
        run: |
          # Run linting with detailed output
          if npm run lint:dry; then
            echo "Linting passed!"
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "Linting failed!"
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1  # This will make the step fail but the job continues due to continue-on-error
          fi
          
      - name: Check linting result
        if: steps.lint-validation.outputs.success != 'true'
        run: |
          echo "::error::Linting failed! Please fix the errors before merging."
          exit 1  # This will fail the job