name: Validate No Linting Errors

on:
  # Only run via workflow_call to ensure commit validation runs first
  workflow_call:
    inputs:
      build-cache-key:
        description: "The build cache key from the build job"
        type: string
        required: false
    outputs:
      lint-success:
        description: "Indicates if linting passed"
        value: ${{ jobs.lint.outputs.lint-success }}
  
  # Also allow manual triggering for debugging
  workflow_dispatch:

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    outputs:
      lint-success: ${{ steps.lint-validation.outputs.success }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      # Restore build cache from previous job
      - name: Restore build cache
        id: restore-build
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            lib
          key: ${{ inputs.build-cache-key }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-build-
      
      # Debug information about cache status
      - name: Cache Diagnostics
        run: |
          echo "Cache hit: ${{ steps.restore-build.outputs.cache-hit }}"
          echo "Cache key: ${{ inputs.build-cache-key }}"
          ls -la node_modules || echo "No node_modules"
          ls -la lib || echo "No lib"
      
      # Install dependencies only if cache miss
      - name: Install dependencies 
        if: steps.restore-build.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts
      
      # Build project only if cache miss
      - name: Build project (if needed)
        if: steps.restore-build.outputs.cache-hit != 'true'
        run: npm run build
      
      - name: Run linting
        id: lint-validation
        continue-on-error: true
        run: |
          # Run linting with detailed output
          if npm run lint:dry; then
            echo "Linting passed!"
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "Linting failed!"
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1  # This will make the step fail but the job continues due to continue-on-error
          fi
          
      - name: Check linting result
        if: steps.lint-validation.outputs.success != 'true'
        run: |
          echo "::error::Linting failed! Please fix the errors before merging."
          exit 1  # This will fail the job