name: Validate No Test Failures

on:
  # Only run via workflow_call to ensure linting runs first
  workflow_call:
    inputs:
      build-cache-key:
        description: "The build cache key from the lint job"
        type: string
        required: false
    outputs:
      test-success:
        description: "Indicates if tests passed"
        value: ${{ jobs.test.outputs.test-success }}
  
  # Also allow manual triggering for debugging
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      test-success: ${{ steps.test-validation.outputs.success }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --ignore-scripts
        
      # Try to restore build cache from lint job
      - name: Restore build cache
        id: restore-build
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            lib
          key: ${{ inputs.build-cache-key || 'no-cache-' }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-build-
            
      # Only build if cache restoration failed
      - name: Build project (if needed)
        if: steps.restore-build.outputs.cache-hit != 'true'
        run: npm run build
      
      - name: Run tests
        id: test-validation
        continue-on-error: true
        run: |
          # Run tests with detailed output
          if npm test; then
            echo "Tests passed!"
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "Tests failed!"
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1  # This will make the step fail but the job continues due to continue-on-error
          fi
          
      - name: Check test result
        if: steps.test-validation.outputs.success != 'true'
        run: |
          echo "::error::Tests failed! Please fix the failing tests before merging."
          exit 1  # This will fail the job