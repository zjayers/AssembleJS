name: deploy_main_version

on:
  push:
    branches:
      - main
    # Prevent build on workflow changes to avoid accidental releases
    paths-ignore:
      - '.github/workflows/**'
  
  # Manual trigger
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  # Promote NPM package from next to latest tag
  promote-package:
    name: Promote Package to Latest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Promote to latest tag
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Promoting package to latest tag..."
          # Extract version from package.json
          VERSION=$(node -p "require('./package.json').version")
          echo "Package version: $VERSION"
          
          # Use dist-tag to promote from next to latest
          npm dist-tag add asmbl@$VERSION latest
          echo "Promoted version $VERSION to latest tag"
  
  # Copy website from next to production bucket
  deploy-website:
    name: Deploy Main Website
    needs: promote-package
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION || 'us-east-1' }}
          role-session-name: GithubActionsSession
          role-duration-seconds: 900
      
      - name: Copy from next to production bucket
        run: |
          # Define source and destination buckets
          SOURCE_BUCKET="www.next.assemblejs.com"
          DEST_BUCKET="www.assemblejs.com"
          
          # Copy from next staging bucket to www production bucket
          echo "Copying from s3://$SOURCE_BUCKET/ to s3://$DEST_BUCKET/"
          aws s3 sync "s3://$SOURCE_BUCKET/" "s3://$DEST_BUCKET/" --delete
          
          echo "ðŸš€ AssembleJS website successfully deployed from www.next.assemblejs.com to www.assemblejs.com"