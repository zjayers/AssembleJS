name: Changelog Preview

on:
  pull_request:
    branches:
      - 'main'
    types: [opened, synchronize, reopened]

# Add explicit permissions
permissions:
  contents: read
  pull-requests: write  # Required for commenting on pull requests

jobs:
  preview-changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --ignore-scripts
      
      - name: Determine version bump type
        id: version-type
        run: |
          # Default to patch
          TYPE="patch"
          
          # Get the PR branch and base branch
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
          
          # Find commit messages for this PR
          COMMITS=$(git log $BASE_SHA..$HEAD_SHA --pretty=format:"%s")
          
          # Check for feature and breaking changes
          if echo "$COMMITS" | grep -q "^feat\|^feat("; then
            TYPE="minor"
          fi
          
          if echo "$COMMITS" | grep -q "^BREAKING CHANGE\|^feat!"; then
            TYPE="major"
          fi
          
          echo "bump-type=$TYPE" >> $GITHUB_OUTPUT
          echo "Version bump type: $TYPE"
      
      - name: Generate commit changes for preview
        run: |
          # Get base and head commits for PR
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
          
          # Start building our changelog content
          echo "### 📝 Changelog Preview" > changelog_preview.md
          echo "" >> changelog_preview.md
          echo "⚠️ **This is only a preview** - The actual changelog will be generated when merging to main and may differ based on other merged PRs." >> changelog_preview.md
          echo "" >> changelog_preview.md
          echo "Based on current commit messages, this PR would result in a **${{ steps.version-type.outputs.bump-type }}** version bump." >> changelog_preview.md
          echo "" >> changelog_preview.md
          
          # Extract features
          FEATURES=$(git log $BASE_SHA..$HEAD_SHA --pretty=format:"%s" | grep -E "^feat(\(.*\))?:")
          if [ ! -z "$FEATURES" ]; then
            echo "### Features" >> changelog_preview.md
            echo "" >> changelog_preview.md
            git log $BASE_SHA..$HEAD_SHA --pretty=format:"- %s" | grep -E "^feat(\(.*\))?:" | sed 's/feat(\(.*\)):/- \1:/' | sed 's/feat:/- /' >> changelog_preview.md
            echo "" >> changelog_preview.md
          fi
          
          # Extract fixes
          FIXES=$(git log $BASE_SHA..$HEAD_SHA --pretty=format:"%s" | grep -E "^fix(\(.*\))?:")
          if [ ! -z "$FIXES" ]; then
            echo "### Bug Fixes" >> changelog_preview.md
            echo "" >> changelog_preview.md
            git log $BASE_SHA..$HEAD_SHA --pretty=format:"- %s" | grep -E "^fix(\(.*\))?:" | sed 's/fix(\(.*\)):/- \1:/' | sed 's/fix:/- /' >> changelog_preview.md
            echo "" >> changelog_preview.md
          fi
          
          # Extract others (refactor, chore, etc.)
          OTHERS=$(git log $BASE_SHA..$HEAD_SHA --pretty=format:"%s" | grep -v -E "^(feat|fix)(\(.*\))?:")
          if [ ! -z "$OTHERS" ]; then
            echo "### Other Changes" >> changelog_preview.md
            echo "" >> changelog_preview.md
            git log $BASE_SHA..$HEAD_SHA --pretty=format:"- %s" | grep -v -E "^(feat|fix)(\(.*\))?:" >> changelog_preview.md
            echo "" >> changelog_preview.md
          fi
          
          # If no changes were found, add a note
          if [ -z "$FEATURES" ] && [ -z "$FIXES" ] && [ -z "$OTHERS" ]; then
            echo "No conventional commit messages found in this PR." >> changelog_preview.md
            echo "" >> changelog_preview.md
            echo "Raw commits:" >> changelog_preview.md
            echo "" >> changelog_preview.md
            git log $BASE_SHA..$HEAD_SHA --pretty=format:"- %h %s" >> changelog_preview.md
          fi
          
          # Show the preview in the log
          cat changelog_preview.md
      
      - name: Comment on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: changelog-preview
          path: changelog_preview.md
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}