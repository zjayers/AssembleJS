name: Changelog Preview

on:
  pull_request:
    branches:
      - 'main'
    types: [opened, synchronize, reopened]

# Add explicit permissions
permissions:
  contents: read
  pull-requests: write  # Required for commenting on pull requests

jobs:
  preview-changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --ignore-scripts
      
      - name: Determine version bump type
        id: version-type
        run: |
          # Default to patch
          TYPE="patch"
          
          # Get the PR branch and base branch
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
          
          # Find commit messages for this PR
          COMMITS=$(git log $BASE_SHA..$HEAD_SHA --pretty=format:"%s")
          
          # Check for feature and breaking changes
          if echo "$COMMITS" | grep -q "^feat\|^feat("; then
            TYPE="minor"
          fi
          
          if echo "$COMMITS" | grep -q "^BREAKING CHANGE\|^feat!"; then
            TYPE="major"
          fi
          
          echo "bump-type=$TYPE" >> $GITHUB_OUTPUT
          echo "Version bump type: $TYPE"
      
      - name: Generate changelog preview
        run: |
          # Save original CHANGELOG.md if it exists
          if [ -f CHANGELOG.md ]; then
            cp CHANGELOG.md CHANGELOG.md.bak
          fi
          
          # Get base and head commits for PR
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
          
          # Generate temporary changelog (will not be committed)
          npm run changelog
          
          # Get recent commits specific to this PR
          echo "Commits included in this PR:" > pr_commits.txt
          git log $BASE_SHA..$HEAD_SHA --pretty=format:"%h - %s (%an)" >> pr_commits.txt
          
          # Extract the unreleased section (with better debugging)
          echo "Extracting changelog content..."
          cat CHANGELOG.md | head -n 30 > changelog_debug.txt
          
          # More robust extraction that shows structured content even if section markers aren't found
          UNRELEASED_CONTENT=$(awk '/^## \[Unreleased\]/,/^## /' CHANGELOG.md)
          if [ -z "$UNRELEASED_CONTENT" ]; then
            # Fallback: just show the PR's commits if changelog parsing fails
            UNRELEASED_CHANGES=$(cat pr_commits.txt)
            echo "⚠️ Could not parse changelog format - showing raw commits instead"
          else
            # Remove the last line that contains the next section header
            UNRELEASED_CHANGES=$(echo "$UNRELEASED_CONTENT" | sed '$d')
          fi
          
          # Debug output
          echo "Extracted changes:"
          echo "$UNRELEASED_CHANGES"
          
          # Restore original CHANGELOG.md
          if [ -f CHANGELOG.md.bak ]; then
            mv CHANGELOG.md.bak CHANGELOG.md
          fi
          
          # Format for PR comment with disclaimer
          echo "### 📝 Changelog Preview" > changelog_preview.md
          echo "" >> changelog_preview.md
          echo "⚠️ **This is only a preview** - The actual changelog will be generated when merging to main and may differ based on other merged PRs." >> changelog_preview.md
          echo "" >> changelog_preview.md
          echo "Based on current commit messages, this PR would result in a **${{ steps.version-type.outputs.bump-type }}** version bump." >> changelog_preview.md
          echo "" >> changelog_preview.md
          echo "#### Projected Changes:" >> changelog_preview.md
          echo "```markdown" >> changelog_preview.md
          echo "$UNRELEASED_CHANGES" >> changelog_preview.md
          echo "```" >> changelog_preview.md
      
      - name: Comment on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: changelog-preview
          path: changelog_preview.md
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}