name: validate_commits

on:
  # Only allow workflow to be called by other workflows
  workflow_call:
    inputs:
      build-cache-key:
        description: "The build cache key from the build job"
        type: string
        required: false
    outputs:
      validation-success:
        description: "Indicates if commit validation passed"
        value: ${{ jobs.validate-commits.outputs.validation-success }}

permissions:
  contents: read

jobs:
  validate-commits:
    runs-on: ubuntu-latest
    outputs:
      validation-success: ${{ steps.commit-validation.outputs.success }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      # Restore build cache from previous job - must exist
      - name: Restore build cache
        id: restore-build
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            lib
          key: ${{ inputs.build-cache-key }}
          
      # Fail the job if cache restoration failed
      - name: Verify cache
        if: steps.restore-build.outputs.cache-hit != 'true'
        run: |
          echo "::error::Build cache restoration failed! This should not happen."
          echo "Cache key: ${{ inputs.build-cache-key }}"
          exit 1
      
      # Use existing commitlint config from repo
      - name: Validate PR commits with commitlint
        id: commit-validation
        continue-on-error: true
        run: |
          
          # Print SHA info for debugging
          echo "Base SHA: ${{ github.event.pull_request.base.sha }}"
          echo "Head SHA: ${{ github.event.pull_request.head.sha }}"
          
          # List commits for debugging
          echo "Commits to validate:"
          git log --oneline ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}
          
          # Run commit validation
          if npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose; then
            echo "Commit validation passed!"
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "Commit validation failed!"
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1  # This will make the step fail but the job continues due to continue-on-error
          fi
          
      - name: Check commit validation result
        if: steps.commit-validation.outputs.success != 'true'
        run: |
          echo "::error::Commit validation failed! Please ensure all commits follow the conventional commit format."
          echo "See: https://www.conventionalcommits.org/"
          exit 1  # This will fail the job, preventing dependent workflows from running