/* AssembleJS TypeDoc Theme */
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap");

:root {
  /* Mega Blocks inspired colors */
  --primary-color: #ff5a00;
  --secondary-color: #2b67f8;
  --tertiary-color: #62b245;
  --accent-color-1: #fee440;
  --accent-color-2: #9b5de5;
  --accent-color-3: #00bbf9;
  --accent-color-4: #f15bb5;

  /* Dark theme colors */
  --dark-bg: #0f172a;
  --dark-surface: #1e293b;
  --dark-surface-2: #334155;
  --dark-text: #f8fafc;
  --dark-text-secondary: #cbd5e1;
  --dark-border: #475569;

  /* Light theme colors */
  --light-bg: #f8fafc;
  --light-surface: #ffffff;
  --light-surface-2: #f1f5f9;
  --light-text: #0f172a;
  --light-text-secondary: #475569;
  --light-border: #e2e8f0;

  /* Code highlighting - no pink */
  --code-bg: #1e1e2e;
  --code-text: #f8f8f2;
  --code-keyword: #2b67f8;
  --code-string: #f1fa8c;
  --code-comment: #6272a4;
  --code-operator: #62b245;
  --code-function: #50fa7b;

  /* CSS Variables for parallax effect */
  --parallax-x: 0px;
  --parallax-y: 0px;
  --parallax-reverse-x: 0px;
  --parallax-reverse-y: 0px;
}

/* Apply theme to TypeDoc elements */
body {
  font-family: "Poppins", system-ui, -apple-system, BlinkMacSystemFont,
    "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue",
    sans-serif;
  line-height: 1.6;
  color: var(--dark-text);
  background-color: var(--dark-bg);
  position: relative;
  overflow-x: hidden;
  margin: 0;
}

body::before,
body::after {
  content: "";
  position: fixed;
  width: 200%;
  height: 200%;
  top: -50%;
  left: -50%;
  z-index: -1;
  background-attachment: fixed;
  pointer-events: none;
}

/* First parallax layer - slow */
body::before {
  background-image: radial-gradient(
      circle at 100px 100px,
      rgba(255, 90, 0, 0.03) 30px,
      transparent 30px
    ),
    radial-gradient(
      circle at 200px 300px,
      rgba(43, 103, 248, 0.03) 60px,
      transparent 60px
    ),
    radial-gradient(
      circle at 600px 500px,
      rgba(98, 178, 69, 0.02) 100px,
      transparent 100px
    ),
    radial-gradient(
      circle at 300px 200px,
      rgba(254, 228, 64, 0.02) 80px,
      transparent 80px
    ),
    radial-gradient(
      circle at 800px 100px,
      rgba(155, 93, 229, 0.02) 50px,
      transparent 50px
    ),
    radial-gradient(
      circle at 400px 600px,
      rgba(0, 187, 249, 0.03) 70px,
      transparent 70px
    );
  animation: float-bg 20s ease-in-out infinite alternate;
  transform: translate(
    calc(var(--parallax-x) * 1),
    calc(var(--parallax-y) * 1)
  );
  transition: transform 2s cubic-bezier(0.2, 0.8, 0.2, 1);
}

/* Second parallax layer - faster */
body::after {
  background-image: radial-gradient(
      circle at 200px 200px,
      rgba(255, 90, 0, 0.02) 50px,
      transparent 50px
    ),
    radial-gradient(
      circle at 400px 500px,
      rgba(43, 103, 248, 0.02) 30px,
      transparent 30px
    ),
    radial-gradient(
      circle at 700px 300px,
      rgba(98, 178, 69, 0.01) 70px,
      transparent 70px
    ),
    radial-gradient(
      circle at 150px 400px,
      rgba(254, 228, 64, 0.01) 40px,
      transparent 40px
    ),
    radial-gradient(
      circle at 600px 200px,
      rgba(155, 93, 229, 0.01) 60px,
      transparent 60px
    ),
    radial-gradient(
      circle at 300px 700px,
      rgba(0, 187, 249, 0.02) 90px,
      transparent 90px
    );
  animation: float-bg-opposite 25s ease-in-out infinite alternate;
  transform: translate(
    calc(var(--parallax-reverse-x) * 1),
    calc(var(--parallax-reverse-y) * 1)
  );
  transition: transform 2.5s cubic-bezier(0.2, 0.8, 0.2, 1);
}

/* Add some unique geometric shapes to background */
body::before {
  background-image: radial-gradient(
      circle at 100px 100px,
      rgba(255, 90, 0, 0.03) 30px,
      transparent 30px
    ),
    radial-gradient(
      circle at 200px 300px,
      rgba(43, 103, 248, 0.03) 60px,
      transparent 60px
    ),
    radial-gradient(
      circle at 600px 500px,
      rgba(98, 178, 69, 0.02) 100px,
      transparent 100px
    ),
    radial-gradient(
      circle at 300px 200px,
      rgba(254, 228, 64, 0.02) 80px,
      transparent 80px
    ),
    radial-gradient(
      circle at 800px 100px,
      rgba(155, 93, 229, 0.02) 50px,
      transparent 50px
    ),
    radial-gradient(
      circle at 400px 600px,
      rgba(0, 187, 249, 0.03) 70px,
      transparent 70px
    ),
    /* Add triangles and other shapes */
      linear-gradient(45deg, rgba(255, 90, 0, 0.01) 25%, transparent 25%),
    linear-gradient(135deg, rgba(43, 103, 248, 0.01) 25%, transparent 25%);
  background-size: auto, auto, auto, auto, auto, auto, 100px 100px, 120px 120px;
  background-position: 0 0, 0 0, 0 0, 0 0, 0 0, 0 0,
    var(--parallax-x) var(--parallax-y),
    var(--parallax-reverse-x) var(--parallax-reverse-y);
}

/* Light theme variations */
body.light-theme {
  color: var(--light-text);
  background-color: var(--light-bg);
}

/* Force background color change immediately */
body.light-theme::before,
body.light-theme::after {
  background-color: var(--light-bg);
}

/* Abstract floating shapes */
.abstract-shapes {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -2;
  overflow: hidden;
  pointer-events: none;
}

.shape {
  position: absolute;
  opacity: 0.05;
  will-change: transform;
  transition: transform 0.8s cubic-bezier(0.25, 0.1, 0.25, 1);
}

/* Adjust shape visibility in light mode */
body.light-theme .shape {
  opacity: 0.08;
}

/* Different shape styles */
.shape-1 {
  top: 15%;
  left: 10%;
  width: 80px;
  height: 80px;
  clip-path: polygon(
    50% 0%,
    100% 38%,
    82% 100%,
    18% 100%,
    0% 38%
  ); /* Pentagon */
  background-color: var(--primary-color);
  animation: float-shape 18s ease-in-out infinite alternate;
}

.shape-2 {
  top: 25%;
  right: 15%;
  width: 60px;
  height: 60px;
  clip-path: polygon(
    50% 0%,
    80% 30%,
    100% 50%,
    80% 70%,
    50% 100%,
    20% 70%,
    0% 50%,
    20% 30%
  ); /* 8-point star */
  background-color: var(--secondary-color);
  animation: float-shape 13s ease-in-out infinite alternate-reverse;
}

.shape-3 {
  bottom: 15%;
  left: 20%;
  width: 70px;
  height: 70px;
  clip-path: polygon(
    20% 0%,
    80% 0%,
    100% 20%,
    100% 80%,
    80% 100%,
    20% 100%,
    0% 80%,
    0% 20%
  ); /* Octagon */
  background-color: var(--tertiary-color);
  animation: float-shape 15s ease-in-out infinite alternate;
}

.shape-4 {
  top: 50%;
  left: 80%;
  width: 50px;
  height: 50px;
  clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%); /* Diamond */
  background-color: var(--accent-color-1);
  animation: float-shape 14s ease-in-out infinite alternate-reverse;
}

.shape-5 {
  top: 75%;
  left: 40%;
  width: 65px;
  height: 65px;
  clip-path: polygon(50% 0%, 100% 100%, 0% 100%); /* Triangle */
  background-color: var(--accent-color-2);
  animation: float-shape 17s ease-in-out infinite alternate;
}

.shape-6 {
  top: 30%;
  left: 50%;
  width: 55px;
  height: 55px;
  clip-path: polygon(
    25% 0%,
    75% 0%,
    100% 50%,
    75% 100%,
    25% 100%,
    0% 50%
  ); /* Hexagon */
  background-color: var(--accent-color-3);
  animation: float-shape 20s ease-in-out infinite alternate-reverse;
}

.shape-7 {
  top: 10%;
  right: 30%;
  width: 70px;
  height: 70px;
  clip-path: circle(50% at 50% 50%); /* Circle */
  background-color: var(--primary-color);
  animation: float-shape 16s ease-in-out infinite alternate;
}

.shape-8 {
  bottom: 20%;
  right: 20%;
  width: 75px;
  height: 75px;
  clip-path: polygon(
    50% 0%,
    100% 25%,
    100% 75%,
    50% 100%,
    0% 75%,
    0% 25%
  ); /* Hexagon */
  background-color: var(--secondary-color);
  animation: float-shape 19s ease-in-out infinite alternate-reverse;
}

/* Animations */

@keyframes float-bg {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(5px, 5px);
  }
}

@keyframes float-bg-opposite {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(-5px, -5px);
  }
}

/* Floating animation for shapes */
@keyframes float-shape {
  0% {
    transform: translate(0, 0) rotate(0deg) scale(1);
  }
  25% {
    transform: translate(10px, 15px) rotate(3deg) scale(1.02);
  }
  50% {
    transform: translate(-5px, 10px) rotate(6deg) scale(1);
  }
  75% {
    transform: translate(-15px, -10px) rotate(3deg) scale(0.98);
  }
  100% {
    transform: translate(5px, -15px) rotate(0deg) scale(1);
  }
}

/* Logo and header styling */
.logo {
  display: flex;
  align-items: center;
  gap: 1rem;
  position: relative;
  margin-right: 1.5rem;
}

.logo-icon {
  width: 80px;
  height: 80px;
  position: relative;
  perspective: 200px; /* Add perspective for 3D effect */
  transform-style: preserve-3d;
  perspective-origin: center center;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 0.5rem;
  cursor: pointer;
  user-select: none;
}

.orbit-container {
  position: absolute;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  animation: rotate-container 20s linear infinite;
  animation-play-state: running;
  will-change: transform;
  transform: rotateY(0deg) rotateX(10deg);
}

/* Paused state for when hexagons are animating */
.orbit-container.paused {
  animation-play-state: paused;
}

.logo-block {
  position: absolute;
  width: 22px;
  height: 22px;
  transition: all 0.8s cubic-bezier(0.34, 1.56, 0.64, 1);
  opacity: 0;
  backface-visibility: visible;
  transform-style: preserve-3d;
  transform: translate(-50%, -50%) scale(0);
  /* Center all blocks initially */
  top: 50%;
  left: 50%;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
  will-change: transform, opacity;
  cursor: pointer;
}

/* 3D hexagons for logo blocks */
.logo-block {
  /* Create hexagon shape with clip-path */
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
}

.block-1 {
  transform: perspective(500px) rotateX(15deg) rotateY(10deg);
}

.block-2 {
  transform: perspective(500px) rotateX(-10deg) rotateY(15deg);
}

.block-3 {
  transform: perspective(500px) rotateX(5deg) rotateZ(15deg);
}

.block-4 {
  transform: perspective(500px) rotateY(20deg) rotateZ(-5deg);
}

.block-5 {
  transform: perspective(500px) rotateZ(10deg) rotateX(-15deg);
}

.block-6 {
  transform: perspective(500px) rotateX(12deg) rotateY(-18deg);
}

/* Explosion animation for logo blocks */
@keyframes explode {
  0% {
    transform: var(--original-transform);
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
  }
  50% {
    transform: var(--explosion-transform);
    box-shadow: 0 0 25px var(--block-color);
  }
  100% {
    transform: var(--original-transform);
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
  }
}

.logo-block.exploding {
  animation: explode 2s cubic-bezier(0.22, 1, 0.36, 1);
  animation-fill-mode: forwards;
  z-index: 10;
}

/* Six differently colored blocks */
.block-1 {
  background-color: var(--primary-color);
}

.block-2 {
  background-color: var(--secondary-color);
}

.block-3 {
  background-color: var(--tertiary-color);
}

.block-4 {
  background-color: var(--accent-color-1);
}

.block-5 {
  background-color: var(--accent-color-2);
}

.block-6 {
  background-color: var(--accent-color-3);
}

/* Container rotation */
@keyframes rotate-container {
  0% {
    transform: rotateY(0deg) rotateX(10deg);
  }
  100% {
    transform: rotateY(360deg) rotateX(10deg);
  }
}

/* Individual 3D orbits with different axes of rotation */
@keyframes orbit-1 {
  0% {
    transform: rotateZ(0deg) translateX(26px) perspective(500px) rotateX(15deg)
      rotateY(10deg);
  }
  100% {
    transform: rotateZ(360deg) translateX(26px) perspective(500px)
      rotateX(15deg) rotateY(10deg);
  }
}

@keyframes orbit-2 {
  0% {
    transform: rotateY(60deg) rotateX(30deg) translateX(28px) perspective(500px)
      rotateX(-10deg) rotateY(15deg);
  }
  100% {
    transform: rotateY(420deg) rotateX(30deg) translateX(28px)
      perspective(500px) rotateX(-10deg) rotateY(15deg);
  }
}

@keyframes orbit-3 {
  0% {
    transform: rotateY(120deg) rotateZ(45deg) translateX(24px)
      perspective(500px) rotateX(5deg) rotateZ(15deg);
  }
  100% {
    transform: rotateY(480deg) rotateZ(45deg) translateX(24px)
      perspective(500px) rotateX(5deg) rotateZ(15deg);
  }
}

@keyframes orbit-4 {
  0% {
    transform: rotateX(60deg) rotateZ(70deg) translateX(30px) perspective(500px)
      rotateY(20deg) rotateZ(-5deg);
  }
  100% {
    transform: rotateX(420deg) rotateZ(70deg) translateX(30px)
      perspective(500px) rotateY(20deg) rotateZ(-5deg);
  }
}

@keyframes orbit-5 {
  0% {
    transform: rotateX(120deg) rotateY(30deg) translateX(27px)
      perspective(500px) rotateZ(10deg) rotateX(-15deg);
  }
  100% {
    transform: rotateX(480deg) rotateY(30deg) translateX(27px)
      perspective(500px) rotateZ(10deg) rotateX(-15deg);
  }
}

@keyframes orbit-6 {
  0% {
    transform: rotateZ(135deg) rotateY(45deg) translateX(29px)
      perspective(500px) rotateX(12deg) rotateY(-18deg);
  }
  100% {
    transform: rotateZ(495deg) rotateY(45deg) translateX(29px)
      perspective(500px) rotateX(12deg) rotateY(-18deg);
  }
}

/* Animate logo blocks on page load and hover */
.logo-icon.animated .block-1,
.logo:hover .block-1 {
  opacity: 1;
  animation: orbit-1 12s linear infinite;
}

.logo-icon.animated .block-2,
.logo:hover .block-2 {
  opacity: 1;
  animation: orbit-2 11s linear infinite;
}

.logo-icon.animated .block-3,
.logo:hover .block-3 {
  opacity: 1;
  animation: orbit-3 14s linear infinite;
}

.logo-icon.animated .block-4,
.logo:hover .block-4 {
  opacity: 1;
  animation: orbit-4 10s linear infinite;
}

.logo-icon.animated .block-5,
.logo:hover .block-5 {
  opacity: 1;
  animation: orbit-5 13s linear infinite;
}

.logo-icon.animated .block-6,
.logo:hover .block-6 {
  opacity: 1;
  animation: orbit-6 15s linear infinite;
}

.assemblejs-title {
  font-weight: 700;
  font-size: 2rem;
  background: linear-gradient(
    90deg,
    var(--primary-color),
    var(--secondary-color),
    var(--tertiary-color),
    var(--accent-color-1)
  );
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  background-size: 300% 100%;
  animation: gradient-shift 8s ease infinite;
  margin: 0;
  padding: 0;
}

@keyframes gradient-shift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Theme toggle button */
.theme-toggle {
  background: none;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  background-color: var(--dark-surface);
  color: var(--dark-text);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  transition: all 0.3s ease;
  position: fixed;
  top: 1rem;
  right: 1rem;
  z-index: 1000;
}

body.light-theme .theme-toggle {
  background-color: var(--light-surface);
  color: var(--light-text);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.theme-toggle:hover {
  transform: scale(1.1);
}

/* Footer styling */
.copyright {
  padding: 0.75rem 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
  color: var(--dark-text-secondary);
  font-size: 0.85rem;
  width: 100%;
  text-align: center;
}

body.light-theme .copyright {
  color: var(--light-text-secondary);
}

/* TypeDoc specific overrides */

/* Sidebar */
.tsd-navigation {
  background-color: var(--dark-surface) !important;
  border-right: 1px solid var(--dark-border) !important;
}

body.light-theme .tsd-navigation {
  background-color: var(--light-surface) !important;
  border-right: 1px solid var(--light-border) !important;
}

/* Links */
a {
  color: var(--secondary-color) !important;
  text-decoration: none !important;
}

a:hover {
  text-decoration: underline !important;
}

/* Navigation headers */
.tsd-navigation-heading {
  color: var(--primary-color) !important;
}

/* Page toolbar */
.tsd-page-toolbar {
  background-color: var(--dark-surface) !important;
  border-bottom: 1px solid var(--dark-border) !important;
  display: flex;
  align-items: center;
}

body.light-theme .tsd-page-toolbar {
  background-color: var(--light-surface) !important;
  border-bottom: 1px solid var(--light-border) !important;
}

/* Toggle buttons */
.tsd-theme-toggle,
.menu-highlight,
.tsd-toolbar-icon {
  color: var(--dark-text) !important;
  background-color: transparent !important;
}

body.light-theme .tsd-theme-toggle,
body.light-theme .menu-highlight,
body.light-theme .tsd-toolbar-icon {
  color: var(--light-text) !important;
}

/* Section headers */
.tsd-panel-header {
  background-color: var(--dark-surface-2) !important;
  color: var(--dark-text) !important;
}

body.light-theme .tsd-panel-header {
  background-color: var(--light-surface-2) !important;
  color: var(--light-text) !important;
}

/* Content panels */
.tsd-panel,
.col-content {
  background-color: var(--dark-surface) !important;
  color: var(--dark-text) !important;
}

body.light-theme .tsd-panel,
body.light-theme .col-content {
  background-color: var(--light-surface) !important;
  color: var(--light-text) !important;
}

/* Code blocks */
.tsd-signature,
pre,
code {
  background-color: var(--dark-surface-2) !important;
  color: var(--dark-text) !important;
  font-family: "Consolas", "Menlo", "Monaco", monospace !important;
}

body.light-theme .tsd-signature,
body.light-theme pre,
body.light-theme code {
  background-color: var(--light-surface-2) !important;
  color: var(--light-text) !important;
}

/* Code highlighting */
.tsd-tag {
  background-color: var(--primary-color) !important;
  color: white !important;
}

.tsd-flag {
  background-color: var(--secondary-color) !important;
  color: white !important;
}

/* Mobile responsiveness */
@media (max-width: 768px) {
  .logo-icon {
    width: 60px;
    height: 60px;
  }

  .assemblejs-title {
    font-size: 1.5rem;
  }
}

/* Ensure main content is not obscured by overlay */
.container {
  position: relative;
  z-index: 1;
}
