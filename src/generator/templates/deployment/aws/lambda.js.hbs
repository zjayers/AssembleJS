/** * AWS Lambda Handler for AssembleJS * Generated by RIVET - AssembleJS
Enterprise Deployment System */ // This file adapts your AssembleJS application
to run as a Lambda function // Import your server file // Note: You'll need to
ensure your AssembleJS server can be properly imported in the Lambda environment
const { createServer } = require('./dist/server'); // AWS Lambda handler
function exports.handler = async (event, context) => { try { // Initialize the
AssembleJS server const server = await createServer(); // Format the AWS API
Gateway event to a format that can be processed by Fastify const request = {
method: event.httpMethod, url: event.path, headers: event.headers, body:
event.body ? JSON.parse(event.body) : undefined, query:
event.queryStringParameters || {}, }; // Process the request using
AssembleJS/Fastify const response = await server.inject(request); // Return a
response compatible with API Gateway return { statusCode: response.statusCode,
headers: response.headers, body: response.body, }; } catch (error) {
console.error('Error processing request:', error); // Return error response
return { statusCode: 500, body: JSON.stringify({ error: 'Internal Server Error',
message: error.message, }), }; } };